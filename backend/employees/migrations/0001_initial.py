# Generated by Django 3.2.3 on 2021-06-07 19:17

import datetime
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import re


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('organizations', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fullName', models.CharField(max_length=120, validators=[django.core.validators.RegexValidator(code=None, flags=0, inverse_match=None, message='ФИО должно содержать только буквы', regex='^[a-zA-Zа-яА-ЯёЁ -]+$')], verbose_name='ФИО')),
                ('fullNameInGenetive', models.CharField(max_length=120, validators=[django.core.validators.RegexValidator(code=None, flags=0, inverse_match=None, message='ФИО должно содержать только буквы', regex='^[a-zA-Zа-яА-ЯёЁ -]+$')], verbose_name='Родительный падеж ФИО')),
                ('birthday', models.DateField(validators=[django.core.validators.MaxValueValidator(limit_value=datetime.date.today, message='Дата рождения не может превышать сегодняшнюю')], verbose_name='Дата рождения')),
                ('birthplace', models.CharField(max_length=120, verbose_name='Место рождения')),
                ('passportNumber', models.CharField(max_length=40, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:\\ \\d+)*\\Z'), code='invalid', message='Неправильный вид номера паспорта')], verbose_name='Номер паспорта')),
                ('passportIssuedBy', models.TextField(blank=True, null=True, verbose_name='Кем выдан паспорт')),
                ('passportIssueDate', models.DateField(verbose_name='Дата выдачи паспорта')),
                ('passportValidityPeriod', models.DateField(blank=True, null=True, verbose_name='Срок действия паспорта')),
                ('citizenship', models.CharField(max_length=120, validators=[django.core.validators.RegexValidator(code=None, flags=0, inverse_match=None, message='Название страны содержить только буквы', regex='^[a-zA-Zа-яА-ЯёЁ ]+$')], verbose_name='Гражданство')),
                ('phoneNumber', models.CharField(blank=True, max_length=40, null=True, verbose_name='Номер телефона')),
                ('INN', models.CharField(blank=True, max_length=12, null=True, validators=[django.core.validators.MinLengthValidator(limit_value=12, message='ИНН не может состоят из менее чем 12 цифр'), django.core.validators.RegexValidator(re.compile('^\\d+(?:\\d+)*\\Z'), code='invalid', message='ИНН должен содержать только цифры')], verbose_name='ИНН')),
                ('SNILS', models.CharField(blank=True, max_length=11, null=True, validators=[django.core.validators.MinLengthValidator(limit_value=11, message='СНИЛС не может состоят из менее чем 11 цифр'), django.core.validators.RegexValidator(re.compile('^\\d+(?:\\d+)*\\Z'), code='invalid', message='СНИЛС должен содержать только цифры')], verbose_name='СНИЛС')),
                ('registrationAddress', models.TextField(verbose_name='Адрес регистрации')),
                ('registrationValidityPeriod', models.DateField(blank=True, null=True, verbose_name='Срок действия регистрации')),
                ('dateOfNotificationUFMSadmission', models.DateField(blank=True, null=True, verbose_name='Дата уведомления УФМС при приёме')),
                ('dateOfNotificationUFMSdischarge', models.DateField(blank=True, null=True, verbose_name='Дата уведомления УФМС при увольнении')),
                ('bankDetailsCardNumber', models.TextField(blank=True, null=True, verbose_name='Номер банковской карты')),
                ('endDateOfRVP', models.DateField(blank=True, null=True, verbose_name='Дата окончания РВП')),
                ('endDateOfResidencePermit', models.DateField(blank=True, null=True, verbose_name='Дата окончания вида на жительство')),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('updatedAt', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Работник',
                'verbose_name_plural': 'Работники',
            },
        ),
        migrations.CreateModel(
            name='EmployeeInOrganization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('admissionDate', models.DateField(verbose_name='Дата принятия на работу по данному тарифу')),
                ('admissionOrderNumber', models.CharField(max_length=100, verbose_name='Номер приказа о приёме')),
                ('dischargeDate', models.DateField(blank=True, null=True, verbose_name='Дата увольнения')),
                ('dischargeOrderNumber', models.CharField(blank=True, max_length=100, null=True, verbose_name='Номер приказа об увольнении')),
                ('employmentContractNumber', models.CharField(blank=True, max_length=100, null=True, verbose_name='Номер трудового договора')),
                ('employmentContractDate', models.DateField(blank=True, null=True, verbose_name='Дата трудового договора')),
                ('GPHContractNumber', models.CharField(blank=True, max_length=100, null=True, verbose_name='Номер ГПХ договора')),
                ('startDateOfGPHContract', models.DateField(blank=True, null=True, verbose_name='Дата начала действия ГПХ Договора')),
                ('endDateOfGPHContract', models.DateField(blank=True, null=True, verbose_name='Дата окончания действия ГПХ Договора')),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('updatedAt', models.DateTimeField(auto_now=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='employees.employee', verbose_name='ФИО сотрудника')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='organizations.organization', verbose_name='Название организации')),
                ('tariff', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='organizations.tariff', verbose_name='Тариф')),
            ],
            options={
                'verbose_name': 'Работник в организации',
                'verbose_name_plural': 'Работники в организациях',
            },
        ),
    ]
